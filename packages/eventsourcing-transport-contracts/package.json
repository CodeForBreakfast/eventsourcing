{
  "name": "@codeforbreakfast/eventsourcing-transport-contracts",
  "version": "0.2.1",
  "description": "Pure transport layer abstractions and contracts for event sourcing - Define transport interfaces that any implementation (WebSocket, HTTP, SSE) can implement",
  "type": "module",
  "main": "./dist/index.js",
  "module": "./dist/index.js",
  "types": "./dist/index.d.ts",
  "exports": {
    ".": {
      "types": "./dist/index.d.ts",
      "import": "./dist/index.js",
      "default": "./dist/index.js"
    },
    "./package.json": "./package.json"
  },
  "files": [
    "dist",
    "src"
  ],
  "scripts": {
    "build": "bun build ./src/index.ts --outdir ./dist --target bun --format esm --external effect --external @effect/* && bun x tsc --build",
    "test": "echo 'Contracts-only package - tests in implementations'",
    "test:watch": "bun test --watch",
    "lint": "eslint . --ext .ts,.tsx",
    "typecheck": "tsc --noEmit",
    "clean": "rm -rf dist",
    "publish:package": "npm publish --access public"
  },
  "keywords": [
    "transport",
    "abstractions",
    "contracts",
    "interface",
    "websocket",
    "http",
    "sse",
    "message-transport",
    "connection",
    "streaming",
    "effect",
    "effect-ts",
    "functional-programming",
    "fp",
    "typescript",
    "type-safe"
  ],
  "author": "Code for Breakfast",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/codeforbreakfast/eventsourcing.git",
    "directory": "packages/eventsourcing-transport-contracts"
  },
  "bugs": {
    "url": "https://github.com/codeforbreakfast/eventsourcing/issues"
  },
  "homepage": "https://github.com/codeforbreakfast/eventsourcing#readme",
  "peerDependencies": {
    "effect": "^3.17.0"
  },
  "devDependencies": {
    "@types/node": "24.5.2",
    "effect": "3.17.14",
    "typescript": "5.9.2",
    "vitest": "3.2.4",
    "eslint": "9.36.0"
  },
  "publishConfig": {
    "access": "public"
  },
  "sideEffects": false,
  "engines": {
    "node": ">=18.0.0"
  }
}
