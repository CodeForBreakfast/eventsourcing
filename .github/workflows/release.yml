# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Release

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-24.04
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0

      - name: Setup Bun
        uses: oven-sh/setup-bun@735343b667d3e6f658f44d0eca948eb6282f2b76 # v2
        with:
          bun-version: latest

      - name: Cache node modules
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4
        id: node-cache
        with:
          path: |
            node_modules
            ~/.bun
          key: ${{ runner.os }}-${{ runner.arch }}-node-${{ hashFiles('**/package.json', 'bun.lockb') }}
          restore-keys: ${{ runner.os }}-${{ runner.arch }}-node-

      - name: Install dependencies
        run: bun install

      - name: Cache turbo
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4
        with:
          path: |
            .turbo/cache
          key: ${{ runner.os }}-${{ runner.arch }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{ runner.arch }}-turbo-

      # Generate a GitHub App token for verified commits
      - name: Generate GitHub App Token
        id: github-app-token
        uses: actions/create-github-app-token@67018539274d69449ef7c02e8e71183d1719ab42 # v2
        with:
          app-id: ${{ secrets.RELEASE_APP_ID }}
          private-key: ${{ secrets.RELEASE_APP_PRIVATE_KEY }}

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          # This expects you to have a script called release which does a build for your packages and calls changeset publish
          publish: bun run release
          version: bun run version
          commit: 'chore: version packages'
          title: 'chore: version packages'
          # Use GitHub API for verified commits
          commitMode: 'github-api'
        env:
          GITHUB_TOKEN: ${{ steps.github-app-token.outputs.token }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Send a Slack notification if a publish happens
        if: steps.changesets.outputs.published == 'true'
        # You can do something here, like send a notification to Slack or create GitHub releases
        run: echo "A new version of packages was published!"
