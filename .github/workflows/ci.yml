# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  ci:
    name: Build, Lint and Test
    runs-on: ubuntu-24.04
    services:
      postgres:
        image: postgres:17-alpine@sha256:d5f196a551b5cef1c70853c6dd588f456d16ca4ea733e3f31c75bc1ae2f65f3f
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0

      - name: Setup Bun
        uses: oven-sh/setup-bun@735343b667d3e6f658f44d0eca948eb6282f2b76 # v2
        with:
          bun-version: latest

      - name: Cache node modules
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4
        id: node-cache
        with:
          path: |
            node_modules
            ~/.bun
          key: ${{ runner.os }}-${{ runner.arch }}-node-${{ hashFiles('**/package.json', 'bun.lockb') }}
          restore-keys: ${{ runner.os }}-${{ runner.arch }}-node-

      - name: Install dependencies
        run: bun install

      - name: Cache turbo
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4
        with:
          path: |
            .turbo/cache
          key: ${{ runner.os }}-${{ runner.arch }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{ runner.arch }}-turbo-

      - name: Build packages
        run: bun run turbo build

      - name: Run typecheck
        run: bun run turbo check

      - name: Run lint
        run: bun run turbo lint

      - name: Run tests
        run: bun run turbo test
        env:
          TEST_PG_USERNAME: postgres
          TEST_PG_PASSWORD: postgres
          TEST_PG_DATABASE: test
          TEST_PG_HOST: localhost
          TEST_PG_PORT: 5432

      - name: Check architecture boundaries
        run: bun run arch:check

      - name: Check for unused dependencies
        run: bun run deps:check

      # Gitleaks requires a license for organizations
      # For now, we run it locally via pre-commit hooks
      # To enable in CI: add GITLEAKS_LICENSE secret to the repository
      # - name: Check for secrets
      #   uses: gitleaks/gitleaks-action@v2
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }}
